{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","redux/types.js","redux/actions.js","components/ContactList/ContactList.js","App.js","redux/reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","onSubmit","useState","name","number","contact","setContact","nameInputId","shortid","generate","numberInputId","handleChange","event","target","value","reset","form","preventDefault","label","htmlFor","type","onChange","id","pattern","title","required","button","Filter","types","deleteContact","payload","contactFetchStart","contactFetchFinished","contactFetchError","error","ContactList","contactsData","dispatch","useDispatch","deleteContactClick","a","axios","delete","result","console","log","deleteContactOperation","list","map","item","onClick","App","useSelector","state","contacts","items","loader","filter","setFilter","useEffect","get","array","data","getVisibleContacts","useMemo","normalizedFilter","toLowerCase","includes","find","presentContact","alert","post","postContactOperation","currentTarget","initialState","rootReducer","combineReducers","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be347959.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__tVDlu\",\"label\":\"ContactForm_label__32662\",\"button\":\"ContactForm_button__JkxoO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2aXVB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__fF5kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1RKFH\",\"item\":\"ContactList_item__NvqOU\",\"name\":\"ContactList_name__3RM1i\",\"number\":\"ContactList_number__37g0W\",\"button\":\"ContactList_button__gtWz9\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","import { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [contact, setContact] = useState({\r\n    name: '',\r\n    number: '',\r\n  });\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    onSubmit({\r\n      contact,\r\n    });\r\n\r\n    reset();\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const { value, name } = event.target;\r\n    if (name === 'name' || name === 'number') {\r\n      setContact({\r\n        ...contact,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setContact({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label} htmlFor={nameInputId}>\r\n        Name{' '}\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={contact.name}\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label} htmlFor={numberInputId}>\r\n        Number{' '}\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={contact.number}\r\n          onChange={handleChange}\r\n          id={numberInputId}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","export const types = {\r\n  SET_CONTACT: 'phoneBook/SET_CONTACT',\r\n  ADD_CONTACT: 'phoneBook/ADD_CONTACT',\r\n  DELETE_CONTACT: 'phoneBook/DELETE_CONTACT',\r\n  UPDATE_CONTACT: 'phoneBook/UPDATE_CONTACT',\r\n  CONTACT_FETCH_START: 'phoneBook/CONTACT_FETCH_START',\r\n  CONTACT_FETCH_FINISHED: 'phoneBook/CONTACT_FETCH_FINISHED',\r\n  CONTACT_FETCH_ERROR: 'phoneBook/CONTACT_FETCH_ERROR',\r\n  CONTACT_FETCH_ERROR_CLEAN: 'phoneBook/CONTACT_FETCH_ERROR_CLEAN',\r\n};","import { types } from './types';\r\nimport axios from \"axios\";\r\n\r\nexport const setContacts = array => ({\r\n  type: types.SET_CONTACT,\r\n  payload: array,\r\n});\r\n\r\nexport const addContact = data => ({\r\n  type: types.ADD_CONTACT,\r\n  payload: data,\r\n});\r\n\r\nexport const deleteContact = id => ({\r\n  type: types.DELETE_CONTACT,\r\n  payload: id,\r\n});\r\n\r\nexport const contactFetchStart = () => ({\r\n  type: types.CONTACT_FETCH_START,\r\n});\r\n\r\nexport const contactFetchFinished = () => ({\r\n  type: types.CONTACT_FETCH_FINISHED,\r\n});\r\n\r\nexport const contactFetchError = (error) => ({\r\n  type: types.CONTACT_FETCH_ERROR,\r\n  payload: error,\r\n});\r\n\r\nexport const getContactsOperation = () => async (dispatch) => {\r\n  dispatch(contactFetchStart());\r\n  try {\r\n    const result = await axios.get(\"http://localhost:7777/contacts\");\r\n    dispatch(setContacts(result.data));\r\n  } catch (error) {\r\n    dispatch(contactFetchError(error));\r\n  } finally {\r\n    dispatch(contactFetchFinished());\r\n  }\r\n};\r\n\r\nexport const postContactOperation = (contact) => async (dispatch) => {\r\n  dispatch(contactFetchStart());\r\n  try {\r\n    const result = await axios.post(\"http://localhost:7777/contacts\", contact);\r\n    dispatch(addContact(result.data));\r\n  } catch (error) {\r\n    dispatch(contactFetchError(error));\r\n  } finally {\r\n    dispatch(contactFetchFinished());\r\n  }\r\n};\r\n\r\nexport const deleteContactOperation = (id) => async (dispatch) => {\r\n  try {\r\n    const result = await axios.delete(`http://localhost:7777/contacts/${id}`);\r\n    dispatch(deleteContact(id));\r\n    console.log(result)\r\n  } catch (error) {\r\n    dispatch(contactFetchError(error));\r\n  }\r\n}","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteContactOperation } from '../../redux/actions';\r\n\r\nexport default function ContactList({ contactsData }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteContactClick = id => {\r\n    dispatch(deleteContactOperation(id));\r\n  };\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contactsData.map(({ id, name, number }) => (\r\n        <li className={s.item} key={id}>\r\n          <p className={s.name}>{name}</p>\r\n          <p className={s.number}>{number}</p>\r\n          <button className={s.button} onClick={() => deleteContactClick(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactsData: PropTypes.array,\r\n};\r\n","import { useState, useEffect, useMemo } from 'react';\r\nimport shortid from 'shortid';\r\nimport './App.css';\r\nimport Container from './components/Container/Container';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { postContactOperation, getContactsOperation } from './redux/actions';\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const { items, error, loader } = useSelector(state => state.contacts);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    dispatch(getContactsOperation());\r\n  }, [dispatch]);\r\n\r\n  const handleSubmitWithAddContact = ({ contact }) => {\r\n    const presentContact = items.find((presentContact) => presentContact.name === contact.name);\r\n    if (presentContact) {\r\n      alert(`${contact.name} is already in contacts. We are working on the ability to edit contacts, but for now you can delete the existing one and add it with a new number.`);\r\n      return;\r\n    }\r\n\r\n    dispatch(postContactOperation({ ...contact, id: shortid.generate() }));\r\n  };\r\n\r\n  const changeFilter = event => {\r\n    setFilter(event.currentTarget.value);\r\n  };\r\n\r\n  const getVisibleContacts = useMemo(() => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    let visibleContacts = items.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    return visibleContacts;\r\n  }, [items, filter]);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={handleSubmitWithAddContact} />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter value={filter} onChange={changeFilter} />\r\n\r\n      {loader && <h2>Loading...</h2>}\r\n      {error && <h2>{error}</h2>}\r\n      {!loader && !error && <ContactList contactsData={getVisibleContacts} />}\r\n    </Container>\r\n  );\r\n}","import { types } from './types';\r\n\r\nexport const initialState = {\r\n  items: [],\r\n  loader: false,\r\n  error: \"\",\r\n};\r\n\r\nexport const contactsReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case types.SET_CONTACT:\r\n      return { ...state, items: payload };\r\n    case types.ADD_CONTACT:\r\n      return { ...state, items: [...state.items, payload] };\r\n    case types.DELETE_CONTACT:\r\n      return { ...state, items: state.items.filter(item => item.id !== payload)};   \r\n    case types.CONTACT_FETCH_START:\r\n      return { ...state, loader: true };\r\n    case types.CONTACT_FETCH_FINISHED:\r\n      return { ...state, loader: false };\r\n    case types.CONTACT_FETCH_ERROR:\r\n      return { ...state, error: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { contactsReducer } from './reducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n}) ","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n// import { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from './rootReducer'\r\n\r\nconst middlewares = [thunk];\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}